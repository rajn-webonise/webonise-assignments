CREATE DATABSE socialBlog;

DESIGN OF TABLES:


CREATE TABLE users (user_id int NOT NULL AUTO_INCREMENT, name varchar(30), PRIMARY KEY (user_id));
INSERT INTO users(name) values('raj');
INSERT INTO users(name) values('krishna');
INSERT INTO users(name) values('riya');
INSERT INTO users(name) values('sumit');

CREATE TABLE articles (article_id int NOT NULL AUTO_INCREMENT, text varchar(30), poster_id int, PRIMARY KEY (article_id));
INSERT INTO articles(text, poster_id) values('Hello!', 1);
INSERT INTO articles(text, poster_id) values('This is my first post', 2);
INSERT INTO articles(text, poster_id) values('Review of Dan Brown\'s books', 4);
INSERT INTO articles(text, poster_id) values('Hello again!', 1);

CREATE TABLE comments (comment_id int NOT NULL AUTO_INCREMENT, text varchar(30), poster_id int, article_id int, PRIMARY KEY (comment_id));
INSERT INTO comments (text, poster_id, article_id) values("Hello to you", 3, 1);
INSERT INTO comments (text, poster_id, article_id) values("Nice post", 1, 2);
INSERT INTO comments (text, poster_id, article_id) values("Keep it up!", 3, 2);

CREATE TABLE friend_requests (fr_id int NOT NULL AUTO_INCREMENT, from_id int, to_id int, PRIMARY KEY(fr_id));
INSERT INTO friend_requests(from_id, to_id) values(1, 2);
INSERT INTO friend_requests(from_id, to_id) values(2, 3);

CREATE TABLE friend_lists(fl_id int NOT NULL AUTO_INCREMENT, u1_id int, u2_id int, PRIMARY KEY(fl_id));
INSERT INTO friend_lists(u1_id, u2_id) values(1, 4);
INSERT INTO friend_lists(u1_id, u2_id) values(3, 4);

/*
1. Sending friend request:
INSERT INTO friend_requests(from_id, to_id) values(1, 3);

2. Post articles:
INSERT INTO articles(text, poster_id) values('This is a test article!', 3);

3. Comment on articles:
INSERT INTO comments (text, poster_id, article_id) values("Test comment on article #4 by user#2", 4, 2);

4. List of friend requests:
SELECT * FROM friend_requests WHERE from_id=current_user_id;

List of articles:
SELECT * FROM articles WHERE poster_id=current_user_id;

List of comments:
SELECT * FROM comments WHERE poster_id=current_user_id;

5. 
Count of friend requests
SELECT COUNT(fr_id) FROM friend_requests WHERE from_id=current_user_id;

Count of articles:
SELECT COUNT(article_id) FROM articles WHERE poster_id=current_user_id;

Count of comments:
SELECT COUNT(comment_id) FROM comments WHERE poster_id=current_user_id;
*/

